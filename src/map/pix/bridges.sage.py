
# This file was *autogenerated* from the file bridges.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_6p5 = RealNumber('6.5'); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_2p5 = RealNumber('2.5'); _sage_const_47 = Integer(47); _sage_const_67 = Integer(67); _sage_const_102 = Integer(102); _sage_const_8 = Integer(8); _sage_const_1 = Integer(1); _sage_const_82 = Integer(82); _sage_const_140 = Integer(140); _sage_const_16 = Integer(16); _sage_const_120 = Integer(120); _sage_const_27 = Integer(27)# bridges.sage
# data on bridges and tolls
# http://costoftolls.com/Tolls_in_New_York.html
# http://maps.google.com/
# 2012-Jan-07 JH
# Bring up sage in a terminal, then call 
# load "bridges.sage"
#
# Holland Tunnel  12.00 one way, 7
# Lincoln Tunnel  12.00 one way, 2 
# George Washington Bridge 12.00 one way, 8
# Bear Mountain Bridge 1.00, 47
# Mid Hudson Bridge, Highland, NY, 1.00, 82
# Gov. Thomas E. Dewey Thruway bridge over hudson toll part of larger road toll
# Kingston-Rhinecliff Bridge, 1.00 , 102
# Newburgh-Beacon Bridge, 1.00, 67
# Rip Van Winkle Bridge, 1.00, 120
# Tappan Zee Bridge, 5.00 one way, 27
# Verrazano-Narrows Bridge, 13.00 one way, 16
data=[
      [_sage_const_2 ,_sage_const_6 ],  # Lincoln Tunnel
      [_sage_const_7 ,_sage_const_6 ],  # Holland Tunnel
      [_sage_const_8 ,_sage_const_6 ], # George Washington Bridge
      [_sage_const_16 ,_sage_const_6p5 ],  # Verrazano-Narrows Bridge
      [_sage_const_27 ,_sage_const_2p5 ],   # Tappan Zee Bridge
      [_sage_const_47 ,_sage_const_1 ],  # Bear Mountain Bridge
      [_sage_const_67 ,_sage_const_1 ],  # Newburgh-Beacon Bridge
      [_sage_const_82 ,_sage_const_1 ],  # Mid Hudson Bridge
      [_sage_const_102 ,_sage_const_1 ],  # Kingston-Rhinecliff Bridge
      [_sage_const_120 ,_sage_const_1 ],  # Rip Van Winkle Bridge
      ]
var('slope,intercept')
__tmp__=var("x"); model = symbolic_expression(slope*x+intercept).function(x)
# use this to find the slope and intercept: find_fit(data,model)
g=points(data)+plot(model(intercept=find_fit(data,model)[_sage_const_0 ].rhs(),slope=find_fit(data,model)[_sage_const_1 ].rhs()),(x,_sage_const_0 ,_sage_const_140 ),color='red',figsize=_sage_const_3 )
g.save("bridges.png")

